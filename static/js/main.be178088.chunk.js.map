{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactsItem/ContactsItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["Form","styled","form","Input","input","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmitForm","event","preventDefault","contact","id","uuidv4","props","onAddContact","onSubmit","this","type","onChange","required","React","Component","Button","button","Li","li","ContactsItem","onRemoveContact","data-id","onClick","e","dataset","Ul","ul","ContactsList","contacts","map","el","key","Filter","onChangeFilter","Container","div","App","filter","addContact","newContact","find","alert","prevState","removeContact","contactId","savedContactsInLS","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be178088.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  border: 1px solid;\n  padding: 15px;\n  margin: 0 auto;\n`;\n\nconst Input = styled.input`\n  display: block;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport class ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitForm = event => {\n    event.preventDefault();\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: uuidv4(),\n    };\n    this.props.onAddContact(contact);\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <>\n        <Form onSubmit={this.handleSubmitForm}>\n          <label>\n            Name\n            <Input\n              name=\"name\"\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Number\n            <Input\n              name=\"number\"\n              type=\"text\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </Form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  margin-left: 10px;\n  font-size: 10px;\n`;\n\nconst Li = styled.li`\n  margin: 10px;\n`;\n\nexport function ContactsItem({\n  contact: { name, number, id },\n  onRemoveContact,\n}) {\n  return (\n    <Li>\n      <span>\n        {name}: {number}\n      </span>\n      <Button\n        type=\"button\"\n        data-id={id}\n        onClick={e => {\n          onRemoveContact(e.target.dataset.id);\n        }}\n      >\n        delete\n      </Button>\n    </Li>\n  );\n}\n\nContactsItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ContactsItem } from '../contactsItem/ContactsItem';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  margin: -10px;\n`;\n\nexport function ContactsList({ contacts, onRemoveContact }) {\n  return (\n    <Ul>\n      {contacts.map(el => (\n        <ContactsItem\n          key={el.id}\n          contact={el}\n          onRemoveContact={onRemoveContact}\n        ></ContactsItem>\n      ))}\n    </Ul>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  display: block;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport function Filter({ value, onChangeFilter }) {\n  return (\n    <label>\n      Find contacts by name\n      <Input\n        name=\"filter\"\n        type=\"text\"\n        value={value}\n        onChange={event => onChangeFilter(event.target.value)}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { ContactForm } from './contactForm/ContactForm';\nimport { ContactsList } from './contactList/ContactList';\nimport { Filter } from './filter/Filter';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 500px;\n  padding: 15px;\n  margin: 0 auto;\n`;\n\nexport class App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const savedContactsInLS = localStorage.getItem('contacts');\n    if (savedContactsInLS) {\n      this.setState({\n        contacts: JSON.parse(savedContactsInLS),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  addContact = newContact => {\n    this.state.contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, newContact],\n          };\n        });\n  };\n\n  onChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const contacts = this.state.contacts;\n    const filter = this.state.filter;\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm onAddContact={this.addContact}></ContactForm>\n          <h2>Contacts</h2>\n          {contacts.length > 0 ? (\n            <Filter value={filter} onChangeFilter={this.onChangeFilter} />\n          ) : (\n            <p>You have no contacts yet</p>\n          )}\n          <ContactsList\n            contacts={filteredContacts}\n            onRemoveContact={this.removeContact}\n          ></ContactsList>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}